geom_point()+
theme_bw()
df_ts %>% sample_frac(1) %>%
select(Toy_Story,average_rating) %>%
group_by(Toy_Story) %>% summarise(mean) %>%
ggplot()+
aes(x = average_rating, y = Toy_Story)+
geom_point()+
theme_bw()
df_ts %>% sample_frac(1) %>%
select(Toy_Story,average_rating) %>%
group_by(Toy_Story) %>% summarise( ~ mean(.x, na.rm = TRUE))) %>%
df_ts %>% sample_frac(1) %>%
select(Toy_Story,average_rating) %>%
group_by(Toy_Story) %>% summarise( ~ mean(.x, na.rm = TRUE)) %>%
ggplot()+
aes(x = average_rating, y = Toy_Story)+
geom_point()+
theme_bw()
df_ts %>% sample_frac(0.025) %>%
select(Toy_Story,starts_with('avg_genre')) %>%
group_by(Toy_Story) %>% summarise_all(mean) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(1) %>%
select(Toy_Story,starts_with('avg_genre')) %>%
group_by(Toy_Story) %>% summarise_all(mean) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(1) %>%
select(Toy_Story,starts_with('avg_genre')) %>%
group_by(Toy_Story) %>% summarise_all(mean)
df_ts %>% sample_frac(1) %>%
select(Toy_Story,starts_with('avg_genre')) %>%
group_by(Toy_Story) %>% summarise_all(mean, na.rm = TRUE) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(1) %>% mutate_at(starts_with('avg_genre'),function(x, na.rm = FALSE)(x - average_rating)) %>%
select(Toy_Story,starts_with('avg_genre')) %>%
group_by(Toy_Story) %>% summarise_all(mean, na.rm = TRUE) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(1) %>% mutate(across(starts_with('avg_genre')),function(x, na.rm = FALSE)(x - average_rating)) %>%
select(Toy_Story,starts_with('avg_genre')) %>%
group_by(Toy_Story) %>% summarise_all(mean, na.rm = TRUE) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(1) %>% mutate(across(starts_with('avg_genre')),(x - average_rating)) %>%
select(Toy_Story,starts_with('avg_genre')) %>%
group_by(Toy_Story) %>% summarise_all(mean, na.rm = TRUE) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(1) %>%
select(Toy_Story,starts_with('avg_genre')) %>%
mutate(across(-matches('average_rating'), ~  . - average_rating)) %>%
group_by(Toy_Story) %>% summarise_all(mean, na.rm = TRUE) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(1) %>%
select(Toy_Story,average_rating,starts_with('avg_genre')) %>%
mutate(across(-matches(c('Toy_Story','average_rating')), ~  . - average_rating)) %>%
group_by(Toy_Story) %>% summarise_all(mean, na.rm = TRUE) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(1) %>%
select(Toy_Story,average_rating) %>%
group_by(Toy_Story) %>% summarise(average_rating=mean(average_rating)) %>%
ggplot()+
aes(x = average_rating, y = Toy_Story)+
geom_point()+
theme_bw()
df_ts %>% sample_frac(0.025) %>%
select(Toy_Story,starts_with('avg_genre')) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(0.025) %>%
select(Toy_Story,starts_with('avg_genre')) %>%
mutate(across(-matches(c('Toy_Story','average_rating')), ~  . - average_rating)) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(0.025) %>%
select(Toy_Story,starts_with('avg_genre')) %>%
mutate(across(-matches(c('Toy_Story')), ~  . - average_rating)) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(0.025) %>%
select(Toy_Story,average_rating,starts_with('avg_genre')) %>%
mutate(across(-matches(c('Toy_Story','average_rating')), ~  . - average_rating)) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(0.5) %>%
select(Toy_Story,average_rating,starts_with('avg_genre')) %>%
mutate(across(-matches(c('Toy_Story','average_rating')), ~  . - average_rating)) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
stat_density_2d()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(1) %>%
select(Toy_Story,average_rating,starts_with('avg_genre')) %>%
mutate(across(-matches(c('Toy_Story','average_rating')), ~  . - average_rating)) %>%
group_by(Toy_Story) %>% summarise_all(mean, na.rm = TRUE) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(1) %>%
select(Toy_Story,average_rating,starts_with('avg_genre')) %>%
mutate(across(-matches(c('Toy_Story','average_rating')), ~  . - average_rating)) %>%
# group_by(Toy_Story) %>% summarise_all(mean, na.rm = TRUE) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
final_df <- readRDS('user_summary_v4_no_target_films')
View(df_ts)
final_df <- readRDS('user_summary_v4_no_target_films')
View(final_df)
Y_ts <- readRDS('Y_ts')
final_df<-final_df %>% mutate(across(.cols = starts_with('avg_'), .fns = ~ na_if(.x,0)))
# scatter plot of users avg rating and nbr_films
final_df %>% filter(nbr_films_watched>=25 & nbr_films_watched<=750) %>%
select(average_rating, nbr_films_watched) %>%
sample_frac(size = 0.3) %>%
ggplot()+
aes(y=average_rating, x=nbr_films_watched)+
geom_point()
#==notes et vues par genre
final_df %>% filter(nbr_films_watched>=25) %>%  select(starts_with('avg_genre')) %>%
na_if(0) %>%
pivot_longer(cols = everything())  %>%  mutate(name = gsub("_", " ", name)) %>%
ggplot()+
aes(x=name, y=value)+
geom_boxplot()+
scale_x_discrete(labels = wrap_format(10))
df_ts <- final_df %>% inner_join(Y_ts) %>% rename(Toy_Story = 'rating') %>% select(-starts_with('sd'))
df_ts %>%  select(Toy_Story) %>%
ggplot()+
aes(Toy_Story)+
geom_histogram()
df_ts %>% sample_frac(1) %>%
select(Toy_Story,average_rating) %>%
group_by(Toy_Story) %>% summarise(average_rating=mean(average_rating)) %>%
ggplot()+
aes(x = average_rating, y = Toy_Story)+
geom_point()+
theme_bw()
df_ts %>% sample_frac(1) %>%
select(Toy_Story,average_rating,sd_,starts_with('avg_genre')) %>%
mutate(across(-matches(c('Toy_Story','average_rating')), ~  (. - average_rating))) %>%
group_by(Toy_Story) %>% summarise_all(mean, na.rm = TRUE) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(1) %>%
select(Toy_Story,average_rating,starts_with('avg_genre')) %>%
mutate(across(-matches(c('Toy_Story','average_rating')), ~  (. - average_rating))) %>%
group_by(Toy_Story) %>% summarise_all(mean, na.rm = TRUE) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
View(df_ts)
df_ts <- final_df %>% inner_join(Y_ts) %>% rename(Toy_Story = 'rating') %>% select()
df_ts_cor <- final_df %>% inner_join(Y_ts) %>% rename(Toy_Story = 'rating') %>% select(-starts_with('sd_'))
cor_ts <- cor(df_ts_cor)
df_ts <- final_df %>% inner_join(Y_ts) %>% rename(Toy_Story = 'rating') %>% select()
df_ts %>% sample_frac(1) %>%
select(Toy_Story,average_rating, sd_user, starts_with('avg_genre')) %>%
mutate(across(-matches(c('Toy_Story','average_rating')), ~  (. - average_rating)/sd_user)) %>%
group_by(Toy_Story) %>% summarise_all(mean, na.rm = TRUE) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts <- final_df %>% inner_join(Y_ts) %>% rename(Toy_Story = 'rating')
df_ts %>% sample_frac(1) %>%
select(Toy_Story,average_rating, sd_user, starts_with('avg_genre')) %>%
mutate(across(-matches(c('Toy_Story','average_rating')), ~  (. - average_rating)/sd_user)) %>%
group_by(Toy_Story) %>% summarise_all(mean, na.rm = TRUE) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(0.025) %>%
select(Toy_Story,average_rating,starts_with('avg_genre')) %>%
mutate(across(-matches(c('Toy_Story','average_rating')), ~  (. - average_rating)/sd_user)) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(0.025) %>%
select(Toy_Story,average_rating, sd_user, starts_with('avg_genre')) %>%
mutate(across(-matches(c('Toy_Story','average_rating')), ~  (. - average_rating)/sd_user)) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(0.5) %>%
select(Toy_Story,average_rating, sd_user, starts_with('avg_genre')) %>%
mutate(across(-matches(c('Toy_Story','average_rating')), ~  (. - average_rating)/sd_user)) %>%
gather(starts_with('avg_genre'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
stat_density_2d()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(0.025) %>%
select(Toy_Story,nbr_films_watched, starts_with('count_gen')) %>%
mutate(across(-matches(c('Toy_Story','nbr_films_watched')), ~  (.)/nbr_films_watched)) %>%
gather(starts_with('count_gen'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(0.025) %>%
select(Toy_Story,nbr_films_watched, starts_with('count_gen')) %>%
mutate(across(-matches(c('Toy_Story','nbr_films_watched')), ~  (.)/nbr_films_watched)) %>%
group_by(Toy_Story) %>% summarise_all(mean, na.rm = TRUE) %>%
gather(starts_with('count_gen'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
df_ts %>% sample_frac(1) %>%
select(Toy_Story,nbr_films_watched, starts_with('count_gen')) %>%
mutate(across(-matches(c('Toy_Story','nbr_films_watched')), ~  (.)/nbr_films_watched)) %>%
group_by(Toy_Story) %>% summarise_all(mean, na.rm = TRUE) %>%
gather(starts_with('count_gen'), key = "var", value = "value") %>%
ggplot()+
aes(x = value, y = Toy_Story)+
geom_point()+
facet_wrap(~ var, scales = "free") +
theme_bw()
final_df_norm <- final_df %>% mutate(across(.cols = starts_with('avg_'), .fns = ~ (. - average_rating)/sd_user))
final_df_norm <- final_df %>%
mutate(across(.cols = starts_with('avg_'), .fns = ~ (. - average_rating)/sd_user)) %>%
mutate(across(.cols = starts_with('count_'), .fns = ~ (.)/nbr_films_watched))
# Correlation plots for X
cor_mat_films_gen <- cor(final_df_norm%>%select(nbr_films_watched,average_rating,starts_with('avg_gen'),
starts_with('count_gen')), use = 'pairwise.complete.obs')
corrplot(cor_mat_films_gen[2:21,c(2:21)])
cor_mat_films_dec <- cor(final_df_norm%>%select(nbr_films_watched,average_rating,starts_with('avg_dec'),
starts_with('count_dec')), use = 'pairwise.complete.obs')
corrplot(cor_mat_films_dec[2:7,]) #
corrplot(cor_mat_films_dec_gen[2:21,c(1,22:50)]) #
cor_mat_films_dec_gen <- cor(final_df_norm%>%select(nbr_films_watched,average_rating,starts_with('avg_gen'),
starts_with('count_gen'),starts_with('avg_dec'),
starts_with('count_dec')), use = 'pairwise.complete.obs')
corrplot(cor_mat_films_dec_gen[2:21,c(1,22:50)]) #
corrplot(cor_mat_films_dec_gen[21:50,c(1,22:50)]) #
# user_summary_no_ts<-readRDS("user_summary_v2_no_ts")
user_summary<-readRDS("user_summary_v3_no_ts")
Y_ts<-readRDS("Y_ts")
library(tidyverse)
library(corrplot)
library(xgboost)
library(caret)
library(rAmCharts)
set.seed(1)
target_film = '1'
final_df_filt <- user_summary %>% #select(-starts_with('avg_act'),-starts_with('count_act'),-starts_with('sd_act'),-starts_with('avg_dir'),-starts_with('count_dir'),-starts_with('sd_dir')) %>%
left_join(Y_ts)%>%
drop_na(rating)
#[,colnames(user_summary) %in% sc]
final_df_filt<- final_df_filt%>%
mutate_all(~replace_na(.,0)) %>%
filter(nbr_films_watched>=20)
train <- final_df_filt %>% sample_frac(0.7)
test  <- final_df_filt %>% anti_join(train, by = 'userId')
data_train <- data.matrix(train %>% select(-userId,-rating))
target_train <- (train %>%  select(rating))[,1]$rating
data_test <- data.matrix(test %>% select(-userId,-rating))
target_test <- (test %>%  select(rating))[,1]$rating
xgb_train = xgb.DMatrix(data = data_train, label = target_train)
xgb_test = xgb.DMatrix(data = data_test, label = target_test)
#===========TRAIN============
watchlist = list(train=xgb_train, test=xgb_test)
model = xgb.train(data = xgb_train, max.depth = 2, eta = 0.3, watchlist=watchlist, nrounds = 500, early_stopping_rounds = 1)
nround_cv <- model$best_iteration
bstSparse <- xgboost(data = data_train, label = target_train, max.depth = 5, eta = 0.3, nrounds = nround_cv, objective = "reg:squarederror")
#================TEST=============
pred_y = predict(bstSparse, data_test)
rmse_pred = sqrt(mean((target_test - pred_y)^2)) #rmse - Root Mean Squared Error
print(paste0('predicted RMSE: ',rmse_pred))
rmse_mean = sqrt(mean((target_test - mean(target_train))^2)) #rmse - Root Mean Squared Error
print(paste0('Dummy RMSE: ', rmse_mean))
print(paste0('improvement: ', (rmse_mean - rmse_pred), ' (', 100*(rmse_mean - rmse_pred)/rmse_mean, ' %)'))
print(paste0('R2: ',1 - sum((target_test - pred_y)^2)/sum((target_test - mean(target_train))^2)))
train <- final_df_filt %>% sample_frac(0.7)
test  <- final_df_filt %>% anti_join(train, by = 'userId')
data_train <- data.matrix(train %>% select(-userId,-rating))
target_train <- (train %>%  select(rating))[,1]$rating
data_test <- data.matrix(test %>% select(-userId,-rating))
target_test <- (test %>%  select(rating))[,1]$rating
xgb_train = xgb.DMatrix(data = data_train, label = target_train)
xgb_test = xgb.DMatrix(data = data_test, label = target_test)
#===========TRAIN============
watchlist = list(train=xgb_train, test=xgb_test)
model = xgb.train(data = xgb_train, max.depth = 2, eta = 0.3, watchlist=watchlist, nrounds = 500, early_stopping_rounds = 1)
nround_cv <- model$best_iteration
bstSparse <- xgboost(data = data_train, label = target_train, max.depth = 5, eta = 0.3, nrounds = nround_cv, objective = "reg:squarederror")
#================TEST=============
pred_y = predict(bstSparse, data_test)
#pred_y_round = round(pred_y*2)/2
rmse_pred = sqrt(mean((target_test - pred_y)^2)) #rmse - Root Mean Squared Error
print(paste0('predicted RMSE: ',rmse_pred))
rmse_mean = sqrt(mean((target_test - mean(target_train))^2)) #rmse - Root Mean Squared Error
print(paste0('Dummy RMSE: ', rmse_mean))
print(paste0('improvement: ', (rmse_mean - rmse_pred), ' (', 100*(rmse_mean - rmse_pred)/rmse_mean, ' %)'))
print(paste0('R2: ',1 - sum((target_test - pred_y)^2)/sum((target_test - mean(target_train))^2)))
# user_summary_no_ts<-readRDS("user_summary_v2_no_ts")
user_summary<-readRDS("user_summary_v4_no_target_films")
set.seed(1)
target_film = '1'
final_df_filt <- user_summary %>% #select(-starts_with('avg_act'),-starts_with('count_act'),-starts_with('sd_act'),-starts_with('avg_dir'),-starts_with('count_dir'),-starts_with('sd_dir')) %>%
left_join(Y_ts)%>%
drop_na(rating)
#[,colnames(user_summary) %in% sc]
final_df_filt<- final_df_filt%>%
mutate_all(~replace_na(.,0)) %>%
filter(nbr_films_watched>=20)
train <- final_df_filt %>% sample_frac(0.7)
test  <- final_df_filt %>% anti_join(train, by = 'userId')
data_train <- data.matrix(train %>% select(-userId,-rating))
target_train <- (train %>%  select(rating))[,1]$rating
data_test <- data.matrix(test %>% select(-userId,-rating))
target_test <- (test %>%  select(rating))[,1]$rating
xgb_train = xgb.DMatrix(data = data_train, label = target_train)
xgb_test = xgb.DMatrix(data = data_test, label = target_test)
#===========TRAIN============
watchlist = list(train=xgb_train, test=xgb_test)
model = xgb.train(data = xgb_train, max.depth = 2, eta = 0.3, watchlist=watchlist, nrounds = 500, early_stopping_rounds = 1)
nround_cv <- model$best_iteration
bstSparse <- xgboost(data = data_train, label = target_train, max.depth = 5, eta = 0.3, nrounds = nround_cv, objective = "reg:squarederror")
#================TEST=============
pred_y = predict(bstSparse, data_test)
#pred_y_round = round(pred_y*2)/2
rmse_pred = sqrt(mean((target_test - pred_y)^2)) #rmse - Root Mean Squared Error
print(paste0('predicted RMSE: ',rmse_pred))
rmse_mean = sqrt(mean((target_test - mean(target_train))^2)) #rmse - Root Mean Squared Error
print(paste0('Dummy RMSE: ', rmse_mean))
print(paste0('improvement: ', (rmse_mean - rmse_pred), ' (', 100*(rmse_mean - rmse_pred)/rmse_mean, ' %)'))
print(paste0('R2: ',1 - sum((target_test - pred_y)^2)/sum((target_test - mean(target_train))^2)))
final_df <- final_df %>%
mutate(across(.cols = starts_with('avg_'), .fns = ~ (. - average_rating)/sd_user)) %>%
mutate(across(.cols = starts_with('count_'), .fns = ~ (.)/nbr_films_watched))
final_df_filt <- final_df_filt %>%
mutate(across(.cols = starts_with('avg_'), .fns = ~ (. - average_rating)/sd_user)) %>%
mutate(across(.cols = starts_with('count_'), .fns = ~ (.)/nbr_films_watched))
#[,colnames(user_summary) %in% sc]
final_df_filt<- final_df_filt%>%
mutate_all(~replace_na(.,0)) %>%
filter(nbr_films_watched>=20)
final_df_filt <- user_summary %>% #select(-starts_with('avg_act'),-starts_with('count_act'),-starts_with('sd_act'),-starts_with('avg_dir'),-starts_with('count_dir'),-starts_with('sd_dir')) %>%
left_join(Y_ts)%>%
drop_na(rating)
final_df_filt <- final_df_filt %>%
mutate(across(.cols = starts_with('avg_'), .fns = ~ (. - average_rating)/sd_user)) %>%
mutate(across(.cols = starts_with('count_'), .fns = ~ (.)/nbr_films_watched))
#[,colnames(user_summary) %in% sc]
final_df_filt<- final_df_filt%>%
mutate_all(~replace_na(.,0)) %>%
filter(nbr_films_watched>=20)
train <- final_df_filt %>% sample_frac(0.7)
test  <- final_df_filt %>% anti_join(train, by = 'userId')
data_train <- data.matrix(train %>% select(-userId,-rating))
target_train <- (train %>%  select(rating))[,1]$rating
data_test <- data.matrix(test %>% select(-userId,-rating))
target_test <- (test %>%  select(rating))[,1]$rating
xgb_train = xgb.DMatrix(data = data_train, label = target_train)
final_df_filt <- user_summary %>% #select(-starts_with('avg_act'),-starts_with('count_act'),-starts_with('sd_act'),-starts_with('avg_dir'),-starts_with('count_dir'),-starts_with('sd_dir')) %>%
left_join(Y_ts)%>%
drop_na(rating)
final_df_filt <- final_df_filt %>%
mutate(across(.cols = starts_with('avg_'), .fns = ~ (. - average_rating)/sd_user)) %>%
mutate(across(.cols = starts_with('count_'), .fns = ~ (.)/nbr_films_watched)) %>%
drop_na()
#[,colnames(user_summary) %in% sc]
final_df_filt<- final_df_filt%>%
mutate_all(~replace_na(.,0)) %>%
filter(nbr_films_watched>=20)
train <- final_df_filt %>% sample_frac(0.7)
test  <- final_df_filt %>% anti_join(train, by = 'userId')
data_train <- data.matrix(train %>% select(-userId,-rating))
target_train <- (train %>%  select(rating))[,1]$rating
data_test <- data.matrix(test %>% select(-userId,-rating))
target_test <- (test %>%  select(rating))[,1]$rating
xgb_train = xgb.DMatrix(data = data_train, label = target_train)
xgb_test = xgb.DMatrix(data = data_test, label = target_test)
#===========TRAIN============
watchlist = list(train=xgb_train, test=xgb_test)
model = xgb.train(data = xgb_train, max.depth = 2, eta = 0.3, watchlist=watchlist, nrounds = 500, early_stopping_rounds = 1)
nround_cv <- model$best_iteration
bstSparse <- xgboost(data = data_train, label = target_train, max.depth = 5, eta = 0.3, nrounds = nround_cv, objective = "reg:squarederror")
#================TEST=============
pred_y = predict(bstSparse, data_test)
rmse_pred = sqrt(mean((target_test - pred_y)^2)) #rmse - Root Mean Squared Error
print(paste0('predicted RMSE: ',rmse_pred))
rmse_mean = sqrt(mean((target_test - mean(target_train))^2)) #rmse - Root Mean Squared Error
print(paste0('Dummy RMSE: ', rmse_mean))
print(paste0('improvement: ', (rmse_mean - rmse_pred), ' (', 100*(rmse_mean - rmse_pred)/rmse_mean, ' %)'))
print(paste0('R2: ',1 - sum((target_test - pred_y)^2)/sum((target_test - mean(target_train))^2)))
final_df_filt <- final_df_filt %>%  filter(nbr_films_watched>=20) %>%
mutate(across(.cols = starts_with('avg_'), .fns = ~ (. - average_rating)/sd_user)) %>%
mutate(across(.cols = starts_with('count_'), .fns = ~ (.)/nbr_films_watched)) %>%
drop_na()
#[,colnames(user_summary) %in% sc]
final_df_filt<- final_df_filt%>%
mutate_all(~replace_na(.,0)) %>%
filter(nbr_films_watched>=20)
final_df_filt <- user_summary %>% #select(-starts_with('avg_act'),-starts_with('count_act'),-starts_with('sd_act'),-starts_with('avg_dir'),-starts_with('count_dir'),-starts_with('sd_dir')) %>%
left_join(Y_ts)%>%
drop_na(rating)
final_df_filt <- final_df_filt %>%  filter(nbr_films_watched>=20) %>%
mutate(across(.cols = starts_with('avg_'), .fns = ~ (. - average_rating)/sd_user)) %>%
mutate(across(.cols = starts_with('count_'), .fns = ~ (.)/nbr_films_watched)) %>%
drop_na()
#[,colnames(user_summary) %in% sc]
final_df_filt<- final_df_filt%>%
mutate_all(~replace_na(.,0)) %>%
filter(nbr_films_watched>=20)
train <- final_df_filt %>% sample_frac(0.7)
test  <- final_df_filt %>% anti_join(train, by = 'userId')
data_train <- data.matrix(train %>% select(-userId,-rating))
target_train <- (train %>%  select(rating))[,1]$rating
data_test <- data.matrix(test %>% select(-userId,-rating))
target_test <- (test %>%  select(rating))[,1]$rating
xgb_train = xgb.DMatrix(data = data_train, label = target_train)
xgb_test = xgb.DMatrix(data = data_test, label = target_test)
#===========TRAIN============
watchlist = list(train=xgb_train, test=xgb_test)
model = xgb.train(data = xgb_train, max.depth = 2, eta = 0.3, watchlist=watchlist, nrounds = 500, early_stopping_rounds = 1)
nround_cv <- model$best_iteration
bstSparse <- xgboost(data = data_train, label = target_train, max.depth = 5, eta = 0.3, nrounds = nround_cv, objective = "reg:squarederror")
#================TEST=============
pred_y = predict(bstSparse, data_test)
#pred_y_round = round(pred_y*2)/2
rmse_pred = sqrt(mean((target_test - pred_y)^2)) #rmse - Root Mean Squared Error
print(paste0('predicted RMSE: ',rmse_pred))
rmse_mean = sqrt(mean((target_test - mean(target_train))^2)) #rmse - Root Mean Squared Error
print(paste0('Dummy RMSE: ', rmse_mean))
print(paste0('improvement: ', (rmse_mean - rmse_pred), ' (', 100*(rmse_mean - rmse_pred)/rmse_mean, ' %)'))
print(paste0('R2: ',1 - sum((target_test - pred_y)^2)/sum((target_test - mean(target_train))^2)))
